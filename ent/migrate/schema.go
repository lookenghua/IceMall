// Code generated by entc, DO NOT EDIT.

package migrate

import (
	"entgo.io/ent/dialect/entsql"
	"entgo.io/ent/dialect/sql/schema"
	"entgo.io/ent/schema/field"
)

var (
	// AftermarketsColumns holds the columns for the "aftermarkets" table.
	AftermarketsColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
	}
	// AftermarketsTable holds the schema information for the "aftermarkets" table.
	AftermarketsTable = &schema.Table{
		Name:       "aftermarkets",
		Columns:    AftermarketsColumns,
		PrimaryKey: []*schema.Column{AftermarketsColumns[0]},
	}
	// AnnexesColumns holds the columns for the "annexes" table.
	AnnexesColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
	}
	// AnnexesTable holds the schema information for the "annexes" table.
	AnnexesTable = &schema.Table{
		Name:       "annexes",
		Columns:    AnnexesColumns,
		PrimaryKey: []*schema.Column{AnnexesColumns[0]},
	}
	// CaptchasColumns holds the columns for the "captchas" table.
	CaptchasColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "created_at", Type: field.TypeTime},
		{Name: "updated_at", Type: field.TypeTime},
		{Name: "deleted_at", Type: field.TypeTime, Nullable: true},
		{Name: "type", Type: field.TypeEnum, Enums: []string{"REGISTER"}},
		{Name: "phone", Type: field.TypeString},
		{Name: "code", Type: field.TypeString},
	}
	// CaptchasTable holds the schema information for the "captchas" table.
	CaptchasTable = &schema.Table{
		Name:       "captchas",
		Columns:    CaptchasColumns,
		PrimaryKey: []*schema.Column{CaptchasColumns[0]},
	}
	// CategoryBannersColumns holds the columns for the "category_banners" table.
	CategoryBannersColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
	}
	// CategoryBannersTable holds the schema information for the "category_banners" table.
	CategoryBannersTable = &schema.Table{
		Name:       "category_banners",
		Columns:    CategoryBannersColumns,
		PrimaryKey: []*schema.Column{CategoryBannersColumns[0]},
	}
	// DataDictionaryKeysColumns holds the columns for the "data_dictionary_keys" table.
	DataDictionaryKeysColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
	}
	// DataDictionaryKeysTable holds the schema information for the "data_dictionary_keys" table.
	DataDictionaryKeysTable = &schema.Table{
		Name:       "data_dictionary_keys",
		Columns:    DataDictionaryKeysColumns,
		PrimaryKey: []*schema.Column{DataDictionaryKeysColumns[0]},
	}
	// DataDictionaryValuesColumns holds the columns for the "data_dictionary_values" table.
	DataDictionaryValuesColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
	}
	// DataDictionaryValuesTable holds the schema information for the "data_dictionary_values" table.
	DataDictionaryValuesTable = &schema.Table{
		Name:       "data_dictionary_values",
		Columns:    DataDictionaryValuesColumns,
		PrimaryKey: []*schema.Column{DataDictionaryValuesColumns[0]},
	}
	// FeedbacksColumns holds the columns for the "feedbacks" table.
	FeedbacksColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
	}
	// FeedbacksTable holds the schema information for the "feedbacks" table.
	FeedbacksTable = &schema.Table{
		Name:       "feedbacks",
		Columns:    FeedbacksColumns,
		PrimaryKey: []*schema.Column{FeedbacksColumns[0]},
	}
	// HomeBannersColumns holds the columns for the "home_banners" table.
	HomeBannersColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
	}
	// HomeBannersTable holds the schema information for the "home_banners" table.
	HomeBannersTable = &schema.Table{
		Name:       "home_banners",
		Columns:    HomeBannersColumns,
		PrimaryKey: []*schema.Column{HomeBannersColumns[0]},
	}
	// MessagesColumns holds the columns for the "messages" table.
	MessagesColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
	}
	// MessagesTable holds the schema information for the "messages" table.
	MessagesTable = &schema.Table{
		Name:       "messages",
		Columns:    MessagesColumns,
		PrimaryKey: []*schema.Column{MessagesColumns[0]},
	}
	// MessageReadsColumns holds the columns for the "message_reads" table.
	MessageReadsColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
	}
	// MessageReadsTable holds the schema information for the "message_reads" table.
	MessageReadsTable = &schema.Table{
		Name:       "message_reads",
		Columns:    MessageReadsColumns,
		PrimaryKey: []*schema.Column{MessageReadsColumns[0]},
	}
	// NotificationsColumns holds the columns for the "notifications" table.
	NotificationsColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
	}
	// NotificationsTable holds the schema information for the "notifications" table.
	NotificationsTable = &schema.Table{
		Name:       "notifications",
		Columns:    NotificationsColumns,
		PrimaryKey: []*schema.Column{NotificationsColumns[0]},
	}
	// OrdersColumns holds the columns for the "orders" table.
	OrdersColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
	}
	// OrdersTable holds the schema information for the "orders" table.
	OrdersTable = &schema.Table{
		Name:       "orders",
		Columns:    OrdersColumns,
		PrimaryKey: []*schema.Column{OrdersColumns[0]},
	}
	// OrderItemsColumns holds the columns for the "order_items" table.
	OrderItemsColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
	}
	// OrderItemsTable holds the schema information for the "order_items" table.
	OrderItemsTable = &schema.Table{
		Name:       "order_items",
		Columns:    OrderItemsColumns,
		PrimaryKey: []*schema.Column{OrderItemsColumns[0]},
	}
	// PopularSearchesColumns holds the columns for the "popular_searches" table.
	PopularSearchesColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
	}
	// PopularSearchesTable holds the schema information for the "popular_searches" table.
	PopularSearchesTable = &schema.Table{
		Name:       "popular_searches",
		Columns:    PopularSearchesColumns,
		PrimaryKey: []*schema.Column{PopularSearchesColumns[0]},
	}
	// ProductsColumns holds the columns for the "products" table.
	ProductsColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
	}
	// ProductsTable holds the schema information for the "products" table.
	ProductsTable = &schema.Table{
		Name:       "products",
		Columns:    ProductsColumns,
		PrimaryKey: []*schema.Column{ProductsColumns[0]},
	}
	// ProductAttributeKeysColumns holds the columns for the "product_attribute_keys" table.
	ProductAttributeKeysColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
	}
	// ProductAttributeKeysTable holds the schema information for the "product_attribute_keys" table.
	ProductAttributeKeysTable = &schema.Table{
		Name:       "product_attribute_keys",
		Columns:    ProductAttributeKeysColumns,
		PrimaryKey: []*schema.Column{ProductAttributeKeysColumns[0]},
	}
	// ProductAttributeValuesColumns holds the columns for the "product_attribute_values" table.
	ProductAttributeValuesColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
	}
	// ProductAttributeValuesTable holds the schema information for the "product_attribute_values" table.
	ProductAttributeValuesTable = &schema.Table{
		Name:       "product_attribute_values",
		Columns:    ProductAttributeValuesColumns,
		PrimaryKey: []*schema.Column{ProductAttributeValuesColumns[0]},
	}
	// ProductBrowseHistoriesColumns holds the columns for the "product_browse_histories" table.
	ProductBrowseHistoriesColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
	}
	// ProductBrowseHistoriesTable holds the schema information for the "product_browse_histories" table.
	ProductBrowseHistoriesTable = &schema.Table{
		Name:       "product_browse_histories",
		Columns:    ProductBrowseHistoriesColumns,
		PrimaryKey: []*schema.Column{ProductBrowseHistoriesColumns[0]},
	}
	// ProductCategoriesColumns holds the columns for the "product_categories" table.
	ProductCategoriesColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
	}
	// ProductCategoriesTable holds the schema information for the "product_categories" table.
	ProductCategoriesTable = &schema.Table{
		Name:       "product_categories",
		Columns:    ProductCategoriesColumns,
		PrimaryKey: []*schema.Column{ProductCategoriesColumns[0]},
	}
	// ProductCollectionsColumns holds the columns for the "product_collections" table.
	ProductCollectionsColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
	}
	// ProductCollectionsTable holds the schema information for the "product_collections" table.
	ProductCollectionsTable = &schema.Table{
		Name:       "product_collections",
		Columns:    ProductCollectionsColumns,
		PrimaryKey: []*schema.Column{ProductCollectionsColumns[0]},
	}
	// ProductEvaluationsColumns holds the columns for the "product_evaluations" table.
	ProductEvaluationsColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
	}
	// ProductEvaluationsTable holds the schema information for the "product_evaluations" table.
	ProductEvaluationsTable = &schema.Table{
		Name:       "product_evaluations",
		Columns:    ProductEvaluationsColumns,
		PrimaryKey: []*schema.Column{ProductEvaluationsColumns[0]},
	}
	// ProductFocusColumns holds the columns for the "product_focus" table.
	ProductFocusColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
	}
	// ProductFocusTable holds the schema information for the "product_focus" table.
	ProductFocusTable = &schema.Table{
		Name:       "product_focus",
		Columns:    ProductFocusColumns,
		PrimaryKey: []*schema.Column{ProductFocusColumns[0]},
	}
	// ProductSpecsColumns holds the columns for the "product_specs" table.
	ProductSpecsColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
	}
	// ProductSpecsTable holds the schema information for the "product_specs" table.
	ProductSpecsTable = &schema.Table{
		Name:       "product_specs",
		Columns:    ProductSpecsColumns,
		PrimaryKey: []*schema.Column{ProductSpecsColumns[0]},
	}
	// ReceivingAddressesColumns holds the columns for the "receiving_addresses" table.
	ReceivingAddressesColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
	}
	// ReceivingAddressesTable holds the schema information for the "receiving_addresses" table.
	ReceivingAddressesTable = &schema.Table{
		Name:       "receiving_addresses",
		Columns:    ReceivingAddressesColumns,
		PrimaryKey: []*schema.Column{ReceivingAddressesColumns[0]},
	}
	// ShoppingCartsColumns holds the columns for the "shopping_carts" table.
	ShoppingCartsColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
	}
	// ShoppingCartsTable holds the schema information for the "shopping_carts" table.
	ShoppingCartsTable = &schema.Table{
		Name:       "shopping_carts",
		Columns:    ShoppingCartsColumns,
		PrimaryKey: []*schema.Column{ShoppingCartsColumns[0]},
	}
	// SystemConfigsColumns holds the columns for the "system_configs" table.
	SystemConfigsColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "rule", Type: field.TypeString, Unique: true},
		{Name: "value", Type: field.TypeString},
		{Name: "remark", Type: field.TypeString},
	}
	// SystemConfigsTable holds the schema information for the "system_configs" table.
	SystemConfigsTable = &schema.Table{
		Name:       "system_configs",
		Columns:    SystemConfigsColumns,
		PrimaryKey: []*schema.Column{SystemConfigsColumns[0]},
		Indexes: []*schema.Index{
			{
				Name:    "systemconfig_rule",
				Unique:  false,
				Columns: []*schema.Column{SystemConfigsColumns[1]},
			},
		},
	}
	// UserColumns holds the columns for the "user" table.
	UserColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "created_at", Type: field.TypeTime},
		{Name: "updated_at", Type: field.TypeTime},
		{Name: "deleted_at", Type: field.TypeTime, Nullable: true},
		{Name: "username", Type: field.TypeString},
		{Name: "role", Type: field.TypeEnum, Enums: []string{"ADMIN", "USER"}},
		{Name: "password", Type: field.TypeString, Nullable: true},
		{Name: "avatar", Type: field.TypeString, Default: "/avatar/default.png"},
		{Name: "phone", Type: field.TypeString, Nullable: true},
		{Name: "score", Type: field.TypeInt, Nullable: true, Default: 0},
		{Name: "sex", Type: field.TypeEnum, Enums: []string{"0", "1", "2"}},
		{Name: "token", Type: field.TypeString, Nullable: true},
	}
	// UserTable holds the schema information for the "user" table.
	UserTable = &schema.Table{
		Name:       "user",
		Columns:    UserColumns,
		PrimaryKey: []*schema.Column{UserColumns[0]},
	}
	// UserIntegralsColumns holds the columns for the "user_integrals" table.
	UserIntegralsColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
	}
	// UserIntegralsTable holds the schema information for the "user_integrals" table.
	UserIntegralsTable = &schema.Table{
		Name:       "user_integrals",
		Columns:    UserIntegralsColumns,
		PrimaryKey: []*schema.Column{UserIntegralsColumns[0]},
	}
	// Tables holds all the tables in the schema.
	Tables = []*schema.Table{
		AftermarketsTable,
		AnnexesTable,
		CaptchasTable,
		CategoryBannersTable,
		DataDictionaryKeysTable,
		DataDictionaryValuesTable,
		FeedbacksTable,
		HomeBannersTable,
		MessagesTable,
		MessageReadsTable,
		NotificationsTable,
		OrdersTable,
		OrderItemsTable,
		PopularSearchesTable,
		ProductsTable,
		ProductAttributeKeysTable,
		ProductAttributeValuesTable,
		ProductBrowseHistoriesTable,
		ProductCategoriesTable,
		ProductCollectionsTable,
		ProductEvaluationsTable,
		ProductFocusTable,
		ProductSpecsTable,
		ReceivingAddressesTable,
		ShoppingCartsTable,
		SystemConfigsTable,
		UserTable,
		UserIntegralsTable,
	}
)

func init() {
	UserTable.Annotation = &entsql.Annotation{
		Table: "user",
	}
}
